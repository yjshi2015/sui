(function() {var type_impls = {
"sui_pg_db":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncConnection-for-AsyncPgConnection\" class=\"impl\"><a href=\"#impl-AsyncConnection-for-AsyncPgConnection\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsyncConnection for AsyncPgConnection</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.LoadFuture\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LoadFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LoadFuture</a>&lt;'conn, 'query&gt; = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;AsyncPgConnection as AsyncConnection&gt;::Stream&lt;'conn, 'query&gt;, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'query&gt;&gt;</h4></section></summary><div class='docblock'>The future returned by <code>AsyncConnection::load</code></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ExecuteFuture\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ExecuteFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ExecuteFuture</a>&lt;'conn, 'query&gt; = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'query&gt;&gt;</h4></section></summary><div class='docblock'>The future returned by <code>AsyncConnection::execute</code></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Stream\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Stream\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Stream</a>&lt;'conn, 'query&gt; = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Stream&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PgRow, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The inner stream returned by <code>AsyncConnection::load</code></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Row\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Row\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Row</a>&lt;'conn, 'query&gt; = PgRow</h4></section></summary><div class='docblock'>The row type used by the stream returned by <code>AsyncConnection::load</code></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Backend\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Backend\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Backend</a> = Pg</h4></section></summary><div class='docblock'>The backend this type connects to</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.establish\" class=\"method trait-impl\"><a href=\"#method.establish\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">establish</a>&lt;'life0, 'async_trait&gt;(\n    database_url: &amp;'life0 <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;AsyncPgConnection, ConnectionError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    AsyncPgConnection: 'async_trait,</div></h4></section></summary><div class='docblock'>Establishes a new connection to the database <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_instrumentation\" class=\"method trait-impl\"><a href=\"#method.set_instrumentation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_instrumentation</a>(&amp;mut self, instrumentation: impl Instrumentation)</h4></section></summary><div class='docblock'>Set a specific [<code>Instrumentation</code>] implementation for this connection</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transaction\" class=\"method trait-impl\"><a href=\"#method.transaction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transaction</a>&lt;'a, 'life0, 'async_trait, R, E, F&gt;(\n    &amp;'life0 mut self,\n    callback: F,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'a: 'async_trait,\n    'life0: 'async_trait,\n    F: for&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;'r mut Self</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn ScopedFuture&lt;'a, 'r, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;&amp;'r &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;, Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'r&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a + 'async_trait,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a + 'async_trait,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a + 'async_trait,\n    Self: 'async_trait,</div></h4></section></summary><div class='docblock'>Executes the given function inside of a database transaction <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.begin_test_transaction\" class=\"method trait-impl\"><a href=\"#method.begin_test_transaction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">begin_test_transaction</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 mut self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Self: 'async_trait,</div></h4></section></summary><div class='docblock'>Creates a transaction that will never be committed. This is useful for\ntests. Panics if called while inside of a transaction or\nif called with a connection containing a broken transaction</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.test_transaction\" class=\"method trait-impl\"><a href=\"#method.test_transaction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">test_transaction</a>&lt;'a, 'async_trait, R, E, F&gt;(\n    &amp;'a mut self,\n    f: F,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'a: 'async_trait,\n    F: for&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;'r mut Self</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn ScopedFuture&lt;'a, 'r, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;&amp;'r &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;, Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, E&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'r&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a + 'async_trait,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a + 'async_trait,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a + 'async_trait,\n    Self: 'a + 'async_trait,</div></h4></section></summary><div class='docblock'>Executes the given function inside a transaction, but does not commit\nit. Panics if the given function returns an error. <a>Read more</a></div></details></div></details>","AsyncConnection","sui_pg_db::ManagedConnection"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncPgConnection\" class=\"impl\"><a href=\"#impl-AsyncPgConnection\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsyncPgConnection</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_transaction\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">build_transaction</a>(&amp;mut self) -&gt; TransactionBuilder&lt;'_, AsyncPgConnection&gt;</h4></section></summary><div class=\"docblock\"><p>Build a transaction, specifying additional details such as isolation level</p>\n<p>See <a href=\"crate::pg::TransactionBuilder\"><code>TransactionBuilder</code></a> for more examples.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>conn.build_transaction()\n    .read_only()\n    .serializable()\n    .deferrable()\n    .run(|conn| <span class=\"kw\">async move </span>{ <span class=\"prelude-val\">Ok</span>(()) }.scope_boxed())\n    .<span class=\"kw\">await</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">try_from</a>(\n    conn: Client,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;AsyncPgConnection, ConnectionError&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new <code>AsyncPgConnection</code> instance from an existing [<code>tokio_postgres::Client</code>]</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cancel_token\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cancel_token</a>(&amp;self) -&gt; CancelToken</h4></section></summary><div class=\"docblock\"><p>Constructs a cancellation token that can later be used to request cancellation of a query running on the connection associated with this client.</p>\n</div></details></div></details>",0,"sui_pg_db::ManagedConnection"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-AsyncPgConnection\" class=\"impl\"><a href=\"#impl-Drop-for-AsyncPgConnection\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for AsyncPgConnection</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","sui_pg_db::ManagedConnection"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimpleAsyncConnection-for-AsyncPgConnection\" class=\"impl\"><a href=\"#impl-SimpleAsyncConnection-for-AsyncPgConnection\" class=\"anchor\">§</a><h3 class=\"code-header\">impl SimpleAsyncConnection for AsyncPgConnection</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_execute\" class=\"method trait-impl\"><a href=\"#method.batch_execute\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_execute</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 mut self,\n    query: &amp;'life1 <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    AsyncPgConnection: 'async_trait,</div></h4></section></summary><div class='docblock'>Execute multiple SQL statements within the same string. <a>Read more</a></div></details></div></details>","SimpleAsyncConnection","sui_pg_db::ManagedConnection"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpdateAndFetchResults%3CChanges,+Output%3E-for-AsyncPgConnection\" class=\"impl\"><a href=\"#impl-UpdateAndFetchResults%3CChanges,+Output%3E-for-AsyncPgConnection\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, Changes, Output, Tab, V&gt; UpdateAndFetchResults&lt;Changes, Output&gt; for AsyncPgConnection<div class=\"where\">where\n    Output: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Changes: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + AsChangeset&lt;Target = Tab&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + Identifiable&lt;Table = Tab&gt;,\n    Tab: Table + FindDsl&lt;&lt;Changes as Identifiable&gt;::Id&gt; + 'b,\n    &lt;Tab as FindDsl&lt;&lt;Changes as Identifiable&gt;::Id&gt;&gt;::Output: IntoUpdateTarget&lt;Table = Tab, WhereClause = V&gt;,\n    UpdateStatement&lt;Tab, V, &lt;Changes as AsChangeset&gt;::Changeset&gt;: AsQuery,\n    UpdateStatement&lt;&lt;Changes as HasTable&gt;::Table, &lt;Changes as IntoUpdateTarget&gt;::WhereClause, &lt;Changes as AsChangeset&gt;::Changeset&gt;: LoadQuery&lt;'b, AsyncPgConnection, Output&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'b,\n    &lt;Changes as AsChangeset&gt;::Changeset: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'b,\n    &lt;Tab as QuerySource&gt;::FromClause: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_and_fetch\" class=\"method trait-impl\"><a href=\"#method.update_and_fetch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">update_and_fetch</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 mut self,\n    changeset: Changes,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Output, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Changes: 'async_trait,\n    &lt;Changes as AsChangeset&gt;::Changeset: 'async_trait,\n    AsyncPgConnection: 'async_trait,</div></h4></section></summary><div class='docblock'>See the traits documentation.</div></details></div></details>","UpdateAndFetchResults<Changes, Output>","sui_pg_db::ManagedConnection"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()
searchState.loadedDescShard("sui_indexer_alt_jsonrpc", 0, "Add an <code>RpcModule</code> to the service. The module’s methods …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of concurrent requests to accept. If …\nReturn a copy of the metrics.\nCreate a new instance of the JSON-RPC service, configured …\nAddress to listen to for incoming JSON-RPC connections.\nStart the service (it will accept connections) and return …\nSet-up and run the RPC service, using the provided …\nOutput the contents of the default configuration to STDOUT.\nRun the RPC service.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPath to the RPC’s configuration TOML file. If one is not …\nGenerate an example configuration, suitable for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfiguration for SuiNS related RPC methods.\nConfiguration for object-related RPC methods.\nConfiguration for transaction-related RPC methods.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")